name: CDK Deploy

on:
  workflow_dispatch:
  push:
    branches: ["main"]

jobs:
  aws_cdk:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

#      - name: Change directory
#        run: |
#          cd .cdk
#          pwd

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: '.cdk/package-lock.json'

#      - name: Install dependencies for project
#        run: npm install

#      - name: Build project
#        run: npm run build
#        env:
#          CONTENTFUL_ENVIRONMENT: ${{ secrets.VITE_CONTENTFUL_ENVIRONMENT }}
#          CONTENTFUL_PREVIEW_TOKEN: ${{ secrets.VITE_CONTENTFUL_PREVIEW_TOKEN }}
#          CONTENTFUL_SPACE_ID: ${{ secrets.VITE_CONTENTFUL_SPACE_ID }}

      - name: Install AWS CDK
        run: npm i -g aws-cdk

      - name: Install linux dependencies
        run: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)" 
          brew install openssl
          # dpkg --add-architecture i386
          # apt-get update
          # apt-get install libssl-dev:i386

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.80.0

      - name: Install Zig
        uses: goto-bus-stop/setup-zig@v2

      - name: Install Cargo Lambda
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: cargo-lambda/cargo-lambda
          # Note: make sure you are using a recent version of cargo-lambda (the one below isn't kept in sync with new releases)
          # tag: v1.3.0 # Remove this if you want to grab always the latest version
          platform: linux # Other valid options: 'windows' or 'darwin'
          arch: x86_64 # Other valid options for linux: 'aarch64'

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: "ap-southeast-2"

      - name: Deploying...
        env:
          CONTENTFUL_ENVIRONMENT: ${{ secrets.VITE_CONTENTFUL_ENVIRONMENT }}
          CONTENTFUL_PREVIEW_TOKEN: ${{ secrets.VITE_CONTENTFUL_PREVIEW_TOKEN }}
          CONTENTFUL_SPACE_ID: ${{ secrets.VITE_CONTENTFUL_SPACE_ID }}
        run: |
          cd .cdk
          pwd
          echo "Installing dependencies in .cdk"
          npm install
          echo "Synth stack"
          npx cdk synth
          echo "Deploy stack"
          npx cdk deploy -- --all --require-approval never